---
// src/components/Mockup.astro

const projectData = [
  { title: "Boda Elegante", video: "https://videos.pexels.com/video-files/7989667/7989667-hd_1080_1920_25fps.mp4" },
  { title: "Premios Monarca", video: "https://videos.pexels.com/video-files/5925286/5925286-uhd_1440_2560_24fps.mp4" },
  { title: "XV Años Luxury", video: "https://videos.pexels.com/video-files/5390857/5390857-uhd_1440_2732_30fps.mp4" }
];
---

<div id="mockup-container" class="relative animate-on-scroll">
  <div class="floating-element -top-8 -left-8 bg-indigo-500/80 p-3 rounded-xl shadow-lg">
    <div class="w-6 h-6 bg-white/20 rounded-sm"></div>
  </div>
  <div class="floating-element -bottom-12 -right-12 bg-purple-500/80 p-4 rounded-2xl shadow-xl">
    <div class="font-sora text-white text-sm font-semibold">RSVP</div>
  </div>

  <div 
  id="mockup-frame" 
  class="relative w-65 md:w-80 h-[450px] md:h-[580px] bg-gray-900 rounded-[3rem] p-3 shadow-2xl border-4 border-gray-700 transition-transform duration-500 ease-in-out"
>
    <div class="w-full h-full bg-black rounded-[2.2rem] overflow-hidden relative">
      {projectData.map((project, index) => (
        <video 
          src={project.video}
          autoplay loop muted playsinline 
          class:list={["video-slide", { 'is-active': index === 0 }]}
          data-index={index}
        />
      ))}
      
      <div class="absolute inset-0 flex flex-col justify-between pointer-events-none">
        <div class="flex space-x-1.5 p-4">
          <div class="w-3 h-3 rounded-full bg-red-500"></div>
          <div class="w-3 h-3 rounded-full bg-yellow-500"></div>
          <div class="w-3 h-3 rounded-full bg-green-500"></div>
        </div>
        <div class="p-4 bg-gradient-to-t from-black/60 to-transparent">
          <div class="bg-white/20 backdrop-blur-sm rounded-xl p-3 border border-white/30">
            <div id="mockup-title" class="font-sora text-white text-sm font-semibold mb-1">
              {projectData[0].title}
            </div>
            <div class="font-sora text-white/80 text-xs">Invitación Digital</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script define:vars={{ projectData }}>
  const mockupContainer = document.getElementById('mockup-container');
  const mockupFrame = document.getElementById('mockup-frame');
  const mockupTitle = document.getElementById('mockup-title');
  const videoSlides = document.querySelectorAll('.video-slide');
  let currentIndex = 0;
  let videoInterval; // Variable para controlar el intervalo

  function cycleVideo() {
    // Ocultar video actual
    videoSlides[currentIndex].classList.remove('is-active');
    
    // Calcular siguiente índice
    currentIndex = (currentIndex + 1) % videoSlides.length;
    
    // Mostrar siguiente video
    videoSlides[currentIndex].classList.add('is-active');
    mockupTitle.textContent = projectData[currentIndex].title;

    // Activar animación del marco
    mockupFrame.classList.add('is-animating');
    setTimeout(() => {
        mockupFrame.classList.remove('is-animating');
    }, 600);
  }

  // --- LÓGICA PARA PAUSAR/REANUDAR LA ANIMACIÓN ---
  const observer = new IntersectionObserver((entries) => {
    const entry = entries[0];
    if (entry.isIntersecting) {
      // Si está visible, inicia el intervalo
      if (!videoInterval) {
        videoInterval = setInterval(cycleVideo, 4000);
      }
    } else {
      // Si no está visible, detén el intervalo
      clearInterval(videoInterval);
      videoInterval = null;
    }
  });

  // Empezar a observar el contenedor del mockup
  observer.observe(mockupContainer);
</script>

<style>
  .video-slide {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    transition: opacity 1s ease-in-out;
  }
  .video-slide.is-active {
    opacity: 1;
  }

  /* Animación del marco del teléfono al cambiar de video */
  #mockup-frame.is-animating {
    transform: scale(1.02) rotateY(3deg);
  }

  /* Animación de los elementos flotantes */
  .floating-element {
    position: absolute;
    animation: float 3s ease-in-out infinite;
  }
  .floating-element:nth-child(2) {
    animation-duration: 8s;
    animation-delay: 1s;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0) rotate(0); }
    50% { transform: translateY(-15px) rotate(5deg); }
  }
</style>